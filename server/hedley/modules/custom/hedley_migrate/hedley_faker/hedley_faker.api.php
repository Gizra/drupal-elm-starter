<?php

/**
 * @file
 * Documents API functions for Hedley Faker module.
 *
 * All Hedley Faker hooks can optionally be defined in
 * modulename.hedley_faker.inc.
 */

/**
 * Alter the instantiated faker object.
 *
 * This gives modules a method for adding custom providers in a centralized
 * place without needing to do it within the generate hook.
 * See the Faker library documentation for information about creating custom
 * providers.
 *
 * @param object $faker
 *   An instantiated Faker\Generator object.
 *
 * @ingroup hedley_faker
 */
function hook_hedley_faker_alter($faker) {
  $faker->addProvider(new ExampleProvider($faker));
}

/**
 * Alter a user object that has generated by devel_generate.
 *
 * @param object $edit
 *   Fields and values to save.
 * @param object $account
 *   The account object.
 * @param object $category
 *   The category for storing profile information in.
 * @param Faker\Generator $faker
 *   The faker generator object.
 *
 * @ingroup hedley_faker
 */
function hook_hedley_faker_user_generate($edit, $account, $category, Faker\Generator $faker) {
}

/**
 * Alter a node object that has generated by devel_generate.
 *
 * @param object $node
 *   The node object.
 * @param Faker\Generator $faker
 *   The faker generator object.
 *
 * @ingroup hedley_faker
 */
function hook_hedley_faker_node_generate($node, Faker\Generator $faker) {
}

/**
 * Alter a taxonomy_term object that has generated by devel_generate.
 *
 * @param object $term
 *   The taxonomy term object.
 * @param Faker\Generator $faker
 *   The faker generator object.
 *
 * @ingroup hedley_faker
 */
function hook_hedley_faker_taxonomy_term_generate($term, Faker\Generator $faker) {
}
